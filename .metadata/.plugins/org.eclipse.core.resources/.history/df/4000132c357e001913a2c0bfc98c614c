package game;

import java.awt.Graphics;

import javax.swing.JFrame;
import javax.swing.JPanel;

public class grid extends JPanel {
	static character[][] grid;
	static int itemSize;
	static int gridSized;
	static int gridPixleSize;

	public grid(int size, int itemSizes, int gridSize, player play){
		grid = new character[size][size];
		itemSize = itemSizes;
		gridPixleSize = gridSize;
		gridSized = size;
		fill();
		add(play, play.getX(), play.getY());
	}
	public static void fill(){
		for(int i = 0;i<grid.length;i++){
			for(int q =0;q<grid[i].length;q++){
				grid[i][q] = new emptySpace(i, q);
			}
		}
	}
	public static drawingComponent update(){
		drawingComponent DC =new drawingComponent(grid, itemSize, gridPixleSize);
		return DC;
		
	}
	public static boolean isValid(int x, int y){
		if(x<gridSized && y<gridSized){
			return true;
		}return false;
	}
	public static boolean isOccupied(int x, int y){
		if(grid[x][y].getId() == 0){return false;}
		return true;
	}
	public static void moveLeft(int objectValue, int x, int y){
		if(isValid(x-1, y) == true && isOccupied(x-1, y) == false){
		character temp = grid[x][y];
		grid[x][y] = new emptySpace(x, y);
		grid[x-1][y] = temp;
		}
	}
	public static void moveRight(int objectValue, int x, int y){
		if(isValid(x+1, y) == true && isOccupied(x+1, y) == false){
			character temp = grid[x][y];
			grid[x][y] = new emptySpace(x, y);
			grid[x+1][y] = temp;
		}
	}
	public static void add(character one, int x, int y){
		if(isValid(x, y) == true){
			grid[x][y] = one;}
	}
	public void moveUp(character self, int x, int y){
		if(isValid(x, y+1) == true && isOccupied(x, y+1) == false){
			grid[x][y] = new emptySpace(x, y);
			grid[x][y+1] = self;
			self.setY(y+1);
		}
	}
	public static void moveDown(int objectValue, int x, int y){
		if(isValid(x, y-1) == true && isOccupied(x, y-1) == false){
			character temp = grid[x][y];
			grid[x][y] = new emptySpace(x, y);
			grid[x][y-1] = temp;
		}
	}
}
